{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.12","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":23404,"sourceType":"datasetVersion","datasetId":17860}],"dockerImageVersionId":30839,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"source":"<a href=\"https://www.kaggle.com/code/sacaak/ir-s-flower-dataset-knn?scriptVersionId=218209429\" target=\"_blank\"><img align=\"left\" alt=\"Kaggle\" title=\"Open in Kaggle\" src=\"https://kaggle.com/static/images/open-in-kaggle.svg\"></a>","metadata":{},"cell_type":"markdown"},{"cell_type":"markdown","source":"# 1- Import Libraries","metadata":{}},{"cell_type":"code","source":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","trusted":true,"execution":{"iopub.status.busy":"2025-01-18T17:21:25.007666Z","iopub.execute_input":"2025-01-18T17:21:25.008087Z","iopub.status.idle":"2025-01-18T17:21:25.013486Z","shell.execute_reply.started":"2025-01-18T17:21:25.008049Z","shell.execute_reply":"2025-01-18T17:21:25.01194Z"}},"outputs":[],"execution_count":96},{"cell_type":"markdown","source":"# 2- Dataset Import: Iris Dataset","metadata":{}},{"cell_type":"code","source":"df = pd.read_csv('/kaggle/input/iris-flower-dataset/IRIS.csv')","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-18T17:21:25.015365Z","iopub.execute_input":"2025-01-18T17:21:25.015757Z","iopub.status.idle":"2025-01-18T17:21:25.041969Z","shell.execute_reply.started":"2025-01-18T17:21:25.015719Z","shell.execute_reply":"2025-01-18T17:21:25.040852Z"}},"outputs":[],"execution_count":97},{"cell_type":"code","source":"df.head()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-18T17:21:25.043564Z","iopub.execute_input":"2025-01-18T17:21:25.043843Z","iopub.status.idle":"2025-01-18T17:21:25.0583Z","shell.execute_reply.started":"2025-01-18T17:21:25.04382Z","shell.execute_reply":"2025-01-18T17:21:25.057155Z"}},"outputs":[{"execution_count":98,"output_type":"execute_result","data":{"text/plain":"   sepal_length  sepal_width  petal_length  petal_width      species\n0           5.1          3.5           1.4          0.2  Iris-setosa\n1           4.9          3.0           1.4          0.2  Iris-setosa\n2           4.7          3.2           1.3          0.2  Iris-setosa\n3           4.6          3.1           1.5          0.2  Iris-setosa\n4           5.0          3.6           1.4          0.2  Iris-setosa","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>sepal_length</th>\n      <th>sepal_width</th>\n      <th>petal_length</th>\n      <th>petal_width</th>\n      <th>species</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>5.1</td>\n      <td>3.5</td>\n      <td>1.4</td>\n      <td>0.2</td>\n      <td>Iris-setosa</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>4.9</td>\n      <td>3.0</td>\n      <td>1.4</td>\n      <td>0.2</td>\n      <td>Iris-setosa</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>4.7</td>\n      <td>3.2</td>\n      <td>1.3</td>\n      <td>0.2</td>\n      <td>Iris-setosa</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>4.6</td>\n      <td>3.1</td>\n      <td>1.5</td>\n      <td>0.2</td>\n      <td>Iris-setosa</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>5.0</td>\n      <td>3.6</td>\n      <td>1.4</td>\n      <td>0.2</td>\n      <td>Iris-setosa</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":98},{"cell_type":"markdown","source":"# 3- Dataset Information","metadata":{}},{"cell_type":"code","source":"df.info()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-18T17:21:25.060034Z","iopub.execute_input":"2025-01-18T17:21:25.060435Z","iopub.status.idle":"2025-01-18T17:21:25.083611Z","shell.execute_reply.started":"2025-01-18T17:21:25.060392Z","shell.execute_reply":"2025-01-18T17:21:25.082359Z"}},"outputs":[{"name":"stdout","text":"<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 150 entries, 0 to 149\nData columns (total 5 columns):\n #   Column        Non-Null Count  Dtype  \n---  ------        --------------  -----  \n 0   sepal_length  150 non-null    float64\n 1   sepal_width   150 non-null    float64\n 2   petal_length  150 non-null    float64\n 3   petal_width   150 non-null    float64\n 4   species       150 non-null    object \ndtypes: float64(4), object(1)\nmemory usage: 6.0+ KB\n","output_type":"stream"}],"execution_count":99},{"cell_type":"code","source":"df.shape","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-18T17:21:25.08491Z","iopub.execute_input":"2025-01-18T17:21:25.08536Z","iopub.status.idle":"2025-01-18T17:21:25.104417Z","shell.execute_reply.started":"2025-01-18T17:21:25.085306Z","shell.execute_reply":"2025-01-18T17:21:25.103397Z"}},"outputs":[{"execution_count":100,"output_type":"execute_result","data":{"text/plain":"(150, 5)"},"metadata":{}}],"execution_count":100},{"cell_type":"code","source":"df.describe().T","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-18T17:21:25.105449Z","iopub.execute_input":"2025-01-18T17:21:25.10579Z","iopub.status.idle":"2025-01-18T17:21:25.143126Z","shell.execute_reply.started":"2025-01-18T17:21:25.105761Z","shell.execute_reply":"2025-01-18T17:21:25.142198Z"}},"outputs":[{"execution_count":101,"output_type":"execute_result","data":{"text/plain":"              count      mean       std  min  25%   50%  75%  max\nsepal_length  150.0  5.843333  0.828066  4.3  5.1  5.80  6.4  7.9\nsepal_width   150.0  3.054000  0.433594  2.0  2.8  3.00  3.3  4.4\npetal_length  150.0  3.758667  1.764420  1.0  1.6  4.35  5.1  6.9\npetal_width   150.0  1.198667  0.763161  0.1  0.3  1.30  1.8  2.5","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>count</th>\n      <th>mean</th>\n      <th>std</th>\n      <th>min</th>\n      <th>25%</th>\n      <th>50%</th>\n      <th>75%</th>\n      <th>max</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>sepal_length</th>\n      <td>150.0</td>\n      <td>5.843333</td>\n      <td>0.828066</td>\n      <td>4.3</td>\n      <td>5.1</td>\n      <td>5.80</td>\n      <td>6.4</td>\n      <td>7.9</td>\n    </tr>\n    <tr>\n      <th>sepal_width</th>\n      <td>150.0</td>\n      <td>3.054000</td>\n      <td>0.433594</td>\n      <td>2.0</td>\n      <td>2.8</td>\n      <td>3.00</td>\n      <td>3.3</td>\n      <td>4.4</td>\n    </tr>\n    <tr>\n      <th>petal_length</th>\n      <td>150.0</td>\n      <td>3.758667</td>\n      <td>1.764420</td>\n      <td>1.0</td>\n      <td>1.6</td>\n      <td>4.35</td>\n      <td>5.1</td>\n      <td>6.9</td>\n    </tr>\n    <tr>\n      <th>petal_width</th>\n      <td>150.0</td>\n      <td>1.198667</td>\n      <td>0.763161</td>\n      <td>0.1</td>\n      <td>0.3</td>\n      <td>1.30</td>\n      <td>1.8</td>\n      <td>2.5</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":101},{"cell_type":"markdown","source":"# 4- Species Distribution","metadata":{}},{"cell_type":"code","source":"df['species'].value_counts()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-18T17:21:25.143998Z","iopub.execute_input":"2025-01-18T17:21:25.14427Z","iopub.status.idle":"2025-01-18T17:21:25.152038Z","shell.execute_reply.started":"2025-01-18T17:21:25.144247Z","shell.execute_reply":"2025-01-18T17:21:25.150973Z"}},"outputs":[{"execution_count":102,"output_type":"execute_result","data":{"text/plain":"species\nIris-setosa        50\nIris-versicolor    50\nIris-virginica     50\nName: count, dtype: int64"},"metadata":{}}],"execution_count":102},{"cell_type":"markdown","source":"# 5- Calculating Sepal and Petal Areas","metadata":{}},{"cell_type":"code","source":"df[\"sepal_area\"] = np.pi * (df[\"sepal_length\"] / 2) * (df[\"sepal_width\"] / 2)\ndf[\"petal_area\"] = np.pi * (df[\"petal_length\"] / 2) * (df[\"petal_width\"] / 2)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-18T17:21:25.155569Z","iopub.execute_input":"2025-01-18T17:21:25.155998Z","iopub.status.idle":"2025-01-18T17:21:25.171856Z","shell.execute_reply.started":"2025-01-18T17:21:25.155968Z","shell.execute_reply":"2025-01-18T17:21:25.17066Z"}},"outputs":[],"execution_count":103},{"cell_type":"code","source":"df.head()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-18T17:21:25.173705Z","iopub.execute_input":"2025-01-18T17:21:25.174142Z","iopub.status.idle":"2025-01-18T17:21:25.198404Z","shell.execute_reply.started":"2025-01-18T17:21:25.174112Z","shell.execute_reply":"2025-01-18T17:21:25.197374Z"}},"outputs":[{"execution_count":104,"output_type":"execute_result","data":{"text/plain":"   sepal_length  sepal_width  petal_length  petal_width      species  \\\n0           5.1          3.5           1.4          0.2  Iris-setosa   \n1           4.9          3.0           1.4          0.2  Iris-setosa   \n2           4.7          3.2           1.3          0.2  Iris-setosa   \n3           4.6          3.1           1.5          0.2  Iris-setosa   \n4           5.0          3.6           1.4          0.2  Iris-setosa   \n\n   sepal_area  petal_area  \n0   14.019357    0.219911  \n1   11.545353    0.219911  \n2   11.812388    0.204204  \n3   11.199778    0.235619  \n4   14.137167    0.219911  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>sepal_length</th>\n      <th>sepal_width</th>\n      <th>petal_length</th>\n      <th>petal_width</th>\n      <th>species</th>\n      <th>sepal_area</th>\n      <th>petal_area</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>5.1</td>\n      <td>3.5</td>\n      <td>1.4</td>\n      <td>0.2</td>\n      <td>Iris-setosa</td>\n      <td>14.019357</td>\n      <td>0.219911</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>4.9</td>\n      <td>3.0</td>\n      <td>1.4</td>\n      <td>0.2</td>\n      <td>Iris-setosa</td>\n      <td>11.545353</td>\n      <td>0.219911</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>4.7</td>\n      <td>3.2</td>\n      <td>1.3</td>\n      <td>0.2</td>\n      <td>Iris-setosa</td>\n      <td>11.812388</td>\n      <td>0.204204</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>4.6</td>\n      <td>3.1</td>\n      <td>1.5</td>\n      <td>0.2</td>\n      <td>Iris-setosa</td>\n      <td>11.199778</td>\n      <td>0.235619</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>5.0</td>\n      <td>3.6</td>\n      <td>1.4</td>\n      <td>0.2</td>\n      <td>Iris-setosa</td>\n      <td>14.137167</td>\n      <td>0.219911</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":104},{"cell_type":"code","source":"# Calculating petal_area and sepal_area averages by species\ngrouped_means = df.groupby(\"species\")[[\"sepal_area\", \"petal_area\"]].mean()\n\nprint(grouped_means)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-18T17:21:25.199596Z","iopub.execute_input":"2025-01-18T17:21:25.199888Z","iopub.status.idle":"2025-01-18T17:21:25.22034Z","shell.execute_reply.started":"2025-01-18T17:21:25.199847Z","shell.execute_reply":"2025-01-18T17:21:25.219308Z"}},"outputs":[{"name":"stdout","text":"                 sepal_area  petal_area\nspecies                                \nIris-setosa       13.515760    0.284942\nIris-versicolor   12.979647    4.492792\nIris-virginica    15.460249    8.872015\n","output_type":"stream"}],"execution_count":105},{"cell_type":"code","source":"# Numerical coding of types\ndf[\"species_encoded\"] = df[\"species\"].astype(\"category\").cat.codes\n\n# Correlation of sepal and petal areas with species\ncorrelation = df[[\"sepal_area\", \"petal_area\", \"species_encoded\"]].corr()\n\nprint(correlation)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-18T17:21:25.22152Z","iopub.execute_input":"2025-01-18T17:21:25.22194Z","iopub.status.idle":"2025-01-18T17:21:25.250017Z","shell.execute_reply.started":"2025-01-18T17:21:25.221903Z","shell.execute_reply":"2025-01-18T17:21:25.248705Z"}},"outputs":[{"name":"stdout","text":"                 sepal_area  petal_area  species_encoded\nsepal_area         1.000000    0.459484         0.301045\npetal_area         0.459484    1.000000         0.950142\nspecies_encoded    0.301045    0.950142         1.000000\n","output_type":"stream"}],"execution_count":106},{"cell_type":"code","source":"df.head()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-18T17:21:25.251238Z","iopub.execute_input":"2025-01-18T17:21:25.251506Z","iopub.status.idle":"2025-01-18T17:21:25.274473Z","shell.execute_reply.started":"2025-01-18T17:21:25.251483Z","shell.execute_reply":"2025-01-18T17:21:25.273392Z"}},"outputs":[{"execution_count":107,"output_type":"execute_result","data":{"text/plain":"   sepal_length  sepal_width  petal_length  petal_width      species  \\\n0           5.1          3.5           1.4          0.2  Iris-setosa   \n1           4.9          3.0           1.4          0.2  Iris-setosa   \n2           4.7          3.2           1.3          0.2  Iris-setosa   \n3           4.6          3.1           1.5          0.2  Iris-setosa   \n4           5.0          3.6           1.4          0.2  Iris-setosa   \n\n   sepal_area  petal_area  species_encoded  \n0   14.019357    0.219911                0  \n1   11.545353    0.219911                0  \n2   11.812388    0.204204                0  \n3   11.199778    0.235619                0  \n4   14.137167    0.219911                0  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>sepal_length</th>\n      <th>sepal_width</th>\n      <th>petal_length</th>\n      <th>petal_width</th>\n      <th>species</th>\n      <th>sepal_area</th>\n      <th>petal_area</th>\n      <th>species_encoded</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>5.1</td>\n      <td>3.5</td>\n      <td>1.4</td>\n      <td>0.2</td>\n      <td>Iris-setosa</td>\n      <td>14.019357</td>\n      <td>0.219911</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>4.9</td>\n      <td>3.0</td>\n      <td>1.4</td>\n      <td>0.2</td>\n      <td>Iris-setosa</td>\n      <td>11.545353</td>\n      <td>0.219911</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>4.7</td>\n      <td>3.2</td>\n      <td>1.3</td>\n      <td>0.2</td>\n      <td>Iris-setosa</td>\n      <td>11.812388</td>\n      <td>0.204204</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>4.6</td>\n      <td>3.1</td>\n      <td>1.5</td>\n      <td>0.2</td>\n      <td>Iris-setosa</td>\n      <td>11.199778</td>\n      <td>0.235619</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>5.0</td>\n      <td>3.6</td>\n      <td>1.4</td>\n      <td>0.2</td>\n      <td>Iris-setosa</td>\n      <td>14.137167</td>\n      <td>0.219911</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":107},{"cell_type":"markdown","source":"# 6- Checking for Missing Values in the Dataset","metadata":{}},{"cell_type":"code","source":"df.isnull().sum()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-18T17:21:25.275798Z","iopub.execute_input":"2025-01-18T17:21:25.276239Z","iopub.status.idle":"2025-01-18T17:21:25.298722Z","shell.execute_reply.started":"2025-01-18T17:21:25.276201Z","shell.execute_reply":"2025-01-18T17:21:25.297466Z"}},"outputs":[{"execution_count":108,"output_type":"execute_result","data":{"text/plain":"sepal_length       0\nsepal_width        0\npetal_length       0\npetal_width        0\nspecies            0\nsepal_area         0\npetal_area         0\nspecies_encoded    0\ndtype: int64"},"metadata":{}}],"execution_count":108},{"cell_type":"markdown","source":"# 7- Splitting Features and Target Variable","metadata":{}},{"cell_type":"code","source":"X = df.drop(['species', 'species_encoded'], axis=1)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-18T17:21:25.300093Z","iopub.execute_input":"2025-01-18T17:21:25.300488Z","iopub.status.idle":"2025-01-18T17:21:25.321205Z","shell.execute_reply.started":"2025-01-18T17:21:25.300454Z","shell.execute_reply":"2025-01-18T17:21:25.320013Z"}},"outputs":[],"execution_count":109},{"cell_type":"code","source":"y = df['species_encoded']","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-18T17:21:25.322448Z","iopub.execute_input":"2025-01-18T17:21:25.322844Z","iopub.status.idle":"2025-01-18T17:21:25.339364Z","shell.execute_reply.started":"2025-01-18T17:21:25.322803Z","shell.execute_reply":"2025-01-18T17:21:25.338245Z"}},"outputs":[],"execution_count":110},{"cell_type":"markdown","source":"# 8- Feature Scaling with Standardization","metadata":{}},{"cell_type":"code","source":"from sklearn.preprocessing import StandardScaler\nX_scaled = StandardScaler().fit_transform(X)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-18T17:21:25.340387Z","iopub.execute_input":"2025-01-18T17:21:25.340708Z","iopub.status.idle":"2025-01-18T17:21:25.362644Z","shell.execute_reply.started":"2025-01-18T17:21:25.340683Z","shell.execute_reply":"2025-01-18T17:21:25.361491Z"}},"outputs":[],"execution_count":111},{"cell_type":"code","source":"X = pd.DataFrame(X_scaled, columns= X.columns)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-18T17:21:25.363659Z","iopub.execute_input":"2025-01-18T17:21:25.364023Z","iopub.status.idle":"2025-01-18T17:21:25.381902Z","shell.execute_reply.started":"2025-01-18T17:21:25.363994Z","shell.execute_reply":"2025-01-18T17:21:25.380635Z"}},"outputs":[],"execution_count":112},{"cell_type":"markdown","source":"# 9- Training the K-Nearest Neighbors (KNN) Model","metadata":{}},{"cell_type":"code","source":"from sklearn.neighbors import KNeighborsClassifier\nknn_model = KNeighborsClassifier().fit(X, y)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-18T17:21:25.383169Z","iopub.execute_input":"2025-01-18T17:21:25.383624Z","iopub.status.idle":"2025-01-18T17:21:25.403894Z","shell.execute_reply.started":"2025-01-18T17:21:25.383575Z","shell.execute_reply":"2025-01-18T17:21:25.402697Z"}},"outputs":[],"execution_count":113},{"cell_type":"markdown","source":"# 10- Randomly Selecting a Sample for Prediction","metadata":{}},{"cell_type":"code","source":"random_select = X.sample(1, random_state = 0)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-18T17:21:25.40492Z","iopub.execute_input":"2025-01-18T17:21:25.405303Z","iopub.status.idle":"2025-01-18T17:21:25.424384Z","shell.execute_reply.started":"2025-01-18T17:21:25.405277Z","shell.execute_reply":"2025-01-18T17:21:25.423165Z"}},"outputs":[],"execution_count":114},{"cell_type":"code","source":"random_select","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-18T17:21:25.425677Z","iopub.execute_input":"2025-01-18T17:21:25.426117Z","iopub.status.idle":"2025-01-18T17:21:25.454221Z","shell.execute_reply.started":"2025-01-18T17:21:25.426073Z","shell.execute_reply":"2025-01-18T17:21:25.452964Z"}},"outputs":[{"execution_count":115,"output_type":"execute_result","data":{"text/plain":"     sepal_length  sepal_width  petal_length  petal_width  sepal_area  \\\n114     -0.052506    -0.587764      0.762759     1.579429   -0.466585   \n\n     petal_area  \n114    1.372327  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>sepal_length</th>\n      <th>sepal_width</th>\n      <th>petal_length</th>\n      <th>petal_width</th>\n      <th>sepal_area</th>\n      <th>petal_area</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>114</th>\n      <td>-0.052506</td>\n      <td>-0.587764</td>\n      <td>0.762759</td>\n      <td>1.579429</td>\n      <td>-0.466585</td>\n      <td>1.372327</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":115},{"cell_type":"code","source":"knn_model.predict(random_select)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-18T17:21:25.455292Z","iopub.execute_input":"2025-01-18T17:21:25.45564Z","iopub.status.idle":"2025-01-18T17:21:25.477108Z","shell.execute_reply.started":"2025-01-18T17:21:25.455611Z","shell.execute_reply":"2025-01-18T17:21:25.475958Z"}},"outputs":[{"execution_count":116,"output_type":"execute_result","data":{"text/plain":"array([2], dtype=int8)"},"metadata":{}}],"execution_count":116},{"cell_type":"code","source":"df.iloc[114].species_encoded","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-18T17:21:25.479014Z","iopub.execute_input":"2025-01-18T17:21:25.479439Z","iopub.status.idle":"2025-01-18T17:21:25.495915Z","shell.execute_reply.started":"2025-01-18T17:21:25.479388Z","shell.execute_reply":"2025-01-18T17:21:25.494582Z"}},"outputs":[{"execution_count":117,"output_type":"execute_result","data":{"text/plain":"2"},"metadata":{}}],"execution_count":117},{"cell_type":"code","source":"random_select = X.sample(1, random_state = 2)\nknn_model.predict(random_select)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-18T17:21:25.502357Z","iopub.execute_input":"2025-01-18T17:21:25.50285Z","iopub.status.idle":"2025-01-18T17:21:25.520324Z","shell.execute_reply.started":"2025-01-18T17:21:25.502802Z","shell.execute_reply":"2025-01-18T17:21:25.519015Z"}},"outputs":[{"execution_count":118,"output_type":"execute_result","data":{"text/plain":"array([0], dtype=int8)"},"metadata":{}}],"execution_count":118},{"cell_type":"code","source":"random_select","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-18T17:21:25.522075Z","iopub.execute_input":"2025-01-18T17:21:25.522431Z","iopub.status.idle":"2025-01-18T17:21:25.545417Z","shell.execute_reply.started":"2025-01-18T17:21:25.522403Z","shell.execute_reply":"2025-01-18T17:21:25.544164Z"}},"outputs":[{"execution_count":119,"output_type":"execute_result","data":{"text/plain":"   sepal_length  sepal_width  petal_length  petal_width  sepal_area  \\\n6     -1.506521     0.800654     -1.341272    -1.181504   -0.645292   \n\n   petal_area  \n6   -1.143765  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>sepal_length</th>\n      <th>sepal_width</th>\n      <th>petal_length</th>\n      <th>petal_width</th>\n      <th>sepal_area</th>\n      <th>petal_area</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>6</th>\n      <td>-1.506521</td>\n      <td>0.800654</td>\n      <td>-1.341272</td>\n      <td>-1.181504</td>\n      <td>-0.645292</td>\n      <td>-1.143765</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":119},{"cell_type":"code","source":"df.iloc[6].species_encoded","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-18T17:21:25.54663Z","iopub.execute_input":"2025-01-18T17:21:25.547049Z","iopub.status.idle":"2025-01-18T17:21:25.566425Z","shell.execute_reply.started":"2025-01-18T17:21:25.547011Z","shell.execute_reply":"2025-01-18T17:21:25.56509Z"}},"outputs":[{"execution_count":120,"output_type":"execute_result","data":{"text/plain":"0"},"metadata":{}}],"execution_count":120},{"cell_type":"markdown","source":"# 11- Importing Metrics for Model Evaluation","metadata":{}},{"cell_type":"code","source":"from sklearn.metrics import classification_report, roc_auc_score","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-18T17:21:25.567597Z","iopub.execute_input":"2025-01-18T17:21:25.568021Z","iopub.status.idle":"2025-01-18T17:21:25.580862Z","shell.execute_reply.started":"2025-01-18T17:21:25.56798Z","shell.execute_reply":"2025-01-18T17:21:25.57978Z"}},"outputs":[],"execution_count":121},{"cell_type":"code","source":"y_pred = knn_model.predict(X)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-18T17:21:25.582091Z","iopub.execute_input":"2025-01-18T17:21:25.582471Z","iopub.status.idle":"2025-01-18T17:21:25.610394Z","shell.execute_reply.started":"2025-01-18T17:21:25.582433Z","shell.execute_reply":"2025-01-18T17:21:25.609177Z"}},"outputs":[],"execution_count":122},{"cell_type":"code","source":"y_prob = knn_model.predict_proba(X)[:, 1] # 1.index yani 1 olma durumu","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-18T17:21:25.611663Z","iopub.execute_input":"2025-01-18T17:21:25.612064Z","iopub.status.idle":"2025-01-18T17:21:25.621042Z","shell.execute_reply.started":"2025-01-18T17:21:25.612028Z","shell.execute_reply":"2025-01-18T17:21:25.619903Z"}},"outputs":[],"execution_count":123},{"cell_type":"code","source":"print(classification_report(y, y_pred))","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-18T17:21:25.622221Z","iopub.execute_input":"2025-01-18T17:21:25.622592Z","iopub.status.idle":"2025-01-18T17:21:25.647534Z","shell.execute_reply.started":"2025-01-18T17:21:25.622565Z","shell.execute_reply":"2025-01-18T17:21:25.646401Z"}},"outputs":[{"name":"stdout","text":"              precision    recall  f1-score   support\n\n           0       1.00      1.00      1.00        50\n           1       0.96      0.94      0.95        50\n           2       0.94      0.96      0.95        50\n\n    accuracy                           0.97       150\n   macro avg       0.97      0.97      0.97       150\nweighted avg       0.97      0.97      0.97       150\n\n","output_type":"stream"}],"execution_count":124},{"cell_type":"code","source":"y_prob = knn_model.predict_proba(X)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-18T17:21:25.648682Z","iopub.execute_input":"2025-01-18T17:21:25.64904Z","iopub.status.idle":"2025-01-18T17:21:25.656746Z","shell.execute_reply.started":"2025-01-18T17:21:25.649012Z","shell.execute_reply":"2025-01-18T17:21:25.655566Z"}},"outputs":[],"execution_count":125},{"cell_type":"code","source":"roc_auc_score(y, y_prob, multi_class='ovr')","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-18T17:21:25.658056Z","iopub.execute_input":"2025-01-18T17:21:25.658505Z","iopub.status.idle":"2025-01-18T17:21:25.679038Z","shell.execute_reply.started":"2025-01-18T17:21:25.658461Z","shell.execute_reply":"2025-01-18T17:21:25.677828Z"}},"outputs":[{"execution_count":126,"output_type":"execute_result","data":{"text/plain":"0.9972"},"metadata":{}}],"execution_count":126},{"cell_type":"code","source":"from sklearn.model_selection import GridSearchCV, cross_validate","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-18T17:21:25.680343Z","iopub.execute_input":"2025-01-18T17:21:25.680748Z","iopub.status.idle":"2025-01-18T17:21:25.694484Z","shell.execute_reply.started":"2025-01-18T17:21:25.680709Z","shell.execute_reply":"2025-01-18T17:21:25.69325Z"}},"outputs":[],"execution_count":127},{"cell_type":"code","source":"import warnings\nwarnings.filterwarnings(\"ignore\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-18T17:21:25.695974Z","iopub.execute_input":"2025-01-18T17:21:25.696379Z","iopub.status.idle":"2025-01-18T17:21:25.714642Z","shell.execute_reply.started":"2025-01-18T17:21:25.696341Z","shell.execute_reply":"2025-01-18T17:21:25.713378Z"}},"outputs":[],"execution_count":128},{"cell_type":"markdown","source":"# 12- Implementing Cross-Validation with Accuracy, F1, and ROC AUC Scores","metadata":{}},{"cell_type":"code","source":"scoring = {\n    'accuracy': 'accuracy',\n    'f1': make_scorer(f1_score, average='weighted'),\n    'roc_auc': make_scorer(roc_auc_score, multi_class='ovr', needs_proba=True)\n}\n\ncv_result = cross_validate(knn_model, X, y, cv=5, scoring=scoring)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-18T17:21:25.71576Z","iopub.execute_input":"2025-01-18T17:21:25.716134Z","iopub.status.idle":"2025-01-18T17:21:25.815337Z","shell.execute_reply.started":"2025-01-18T17:21:25.716094Z","shell.execute_reply":"2025-01-18T17:21:25.81419Z"}},"outputs":[],"execution_count":129},{"cell_type":"code","source":"cv_result","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-18T17:21:25.816451Z","iopub.execute_input":"2025-01-18T17:21:25.816768Z","iopub.status.idle":"2025-01-18T17:21:25.824429Z","shell.execute_reply.started":"2025-01-18T17:21:25.816729Z","shell.execute_reply":"2025-01-18T17:21:25.823058Z"}},"outputs":[{"execution_count":130,"output_type":"execute_result","data":{"text/plain":"{'fit_time': array([0.0039475 , 0.0034852 , 0.00251007, 0.00215816, 0.00217628]),\n 'score_time': array([0.01766729, 0.01639462, 0.01065135, 0.01060009, 0.01043081]),\n 'test_accuracy': array([0.96666667, 0.96666667, 0.9       , 0.93333333, 1.        ]),\n 'test_f1': array([0.96658312, 0.96658312, 0.89769821, 0.93333333, 1.        ]),\n 'test_roc_auc': array([0.99333333, 0.99666667, 1.        , 0.99      , 1.        ])}"},"metadata":{}}],"execution_count":130},{"cell_type":"code","source":"print('Accuracy = ', cv_result['test_accuracy'].mean() )\nprint('F1 = ', cv_result['test_f1'].mean() )\nprint('Roc_auc = ', cv_result['test_roc_auc'].mean() )","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-18T17:21:25.825452Z","iopub.execute_input":"2025-01-18T17:21:25.825753Z","iopub.status.idle":"2025-01-18T17:21:25.841585Z","shell.execute_reply.started":"2025-01-18T17:21:25.825729Z","shell.execute_reply":"2025-01-18T17:21:25.840424Z"}},"outputs":[{"name":"stdout","text":"Accuracy =  0.9533333333333334\nF1 =  0.9528395584015452\nRoc_auc =  0.9960000000000001\n","output_type":"stream"}],"execution_count":131},{"cell_type":"code","source":"# Let's see if a better model can be built","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-18T17:21:25.843013Z","iopub.execute_input":"2025-01-18T17:21:25.843459Z","iopub.status.idle":"2025-01-18T17:21:25.860043Z","shell.execute_reply.started":"2025-01-18T17:21:25.843421Z","shell.execute_reply":"2025-01-18T17:21:25.858745Z"}},"outputs":[],"execution_count":132},{"cell_type":"code","source":"knn_model.get_params()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-18T17:21:25.861199Z","iopub.execute_input":"2025-01-18T17:21:25.86158Z","iopub.status.idle":"2025-01-18T17:21:25.881229Z","shell.execute_reply.started":"2025-01-18T17:21:25.861544Z","shell.execute_reply":"2025-01-18T17:21:25.880013Z"}},"outputs":[{"execution_count":133,"output_type":"execute_result","data":{"text/plain":"{'algorithm': 'auto',\n 'leaf_size': 30,\n 'metric': 'minkowski',\n 'metric_params': None,\n 'n_jobs': None,\n 'n_neighbors': 5,\n 'p': 2,\n 'weights': 'uniform'}"},"metadata":{}}],"execution_count":133},{"cell_type":"code","source":"knn_params = {'n_neighbors': range(2, 50)}","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-18T17:21:25.882542Z","iopub.execute_input":"2025-01-18T17:21:25.882984Z","iopub.status.idle":"2025-01-18T17:21:25.899483Z","shell.execute_reply.started":"2025-01-18T17:21:25.882936Z","shell.execute_reply":"2025-01-18T17:21:25.898166Z"}},"outputs":[],"execution_count":134},{"cell_type":"code","source":"knn_gs_best = GridSearchCV(knn_model, knn_params, cv=5, n_jobs=-1, verbose=1).fit(X, y)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-18T17:21:25.90066Z","iopub.execute_input":"2025-01-18T17:21:25.901129Z","iopub.status.idle":"2025-01-18T17:21:28.973399Z","shell.execute_reply.started":"2025-01-18T17:21:25.901088Z","shell.execute_reply":"2025-01-18T17:21:28.972069Z"}},"outputs":[{"name":"stdout","text":"Fitting 5 folds for each of 48 candidates, totalling 240 fits\n","output_type":"stream"}],"execution_count":135},{"cell_type":"code","source":"knn_gs_best.best_params_","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-18T17:21:28.974705Z","iopub.execute_input":"2025-01-18T17:21:28.975239Z","iopub.status.idle":"2025-01-18T17:21:28.982547Z","shell.execute_reply.started":"2025-01-18T17:21:28.975196Z","shell.execute_reply":"2025-01-18T17:21:28.981212Z"}},"outputs":[{"execution_count":136,"output_type":"execute_result","data":{"text/plain":"{'n_neighbors': 8}"},"metadata":{}}],"execution_count":136},{"cell_type":"code","source":"knn_final = knn_model.set_params(**knn_gs_best.best_params_).fit(X, y)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-18T17:21:28.983754Z","iopub.execute_input":"2025-01-18T17:21:28.984183Z","iopub.status.idle":"2025-01-18T17:21:29.004487Z","shell.execute_reply.started":"2025-01-18T17:21:28.984145Z","shell.execute_reply":"2025-01-18T17:21:29.003402Z"}},"outputs":[],"execution_count":137},{"cell_type":"code","source":"scoring = {\n    'accuracy': 'accuracy',\n    'f1': make_scorer(f1_score, average='weighted'),\n    'roc_auc': make_scorer(roc_auc_score, multi_class='ovr', needs_proba=True)\n}\n\ncv_result = cross_validate(knn_model, X, y, cv=5, scoring=scoring)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-18T17:21:29.005524Z","iopub.execute_input":"2025-01-18T17:21:29.005948Z","iopub.status.idle":"2025-01-18T17:21:29.08998Z","shell.execute_reply.started":"2025-01-18T17:21:29.00591Z","shell.execute_reply":"2025-01-18T17:21:29.088889Z"}},"outputs":[],"execution_count":138},{"cell_type":"code","source":"cv_result","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-18T17:21:29.091118Z","iopub.execute_input":"2025-01-18T17:21:29.091396Z","iopub.status.idle":"2025-01-18T17:21:29.098643Z","shell.execute_reply.started":"2025-01-18T17:21:29.09137Z","shell.execute_reply":"2025-01-18T17:21:29.097459Z"}},"outputs":[{"execution_count":139,"output_type":"execute_result","data":{"text/plain":"{'fit_time': array([0.00285769, 0.00240684, 0.00205016, 0.00204515, 0.0022428 ]),\n 'score_time': array([0.01252651, 0.01017904, 0.0098896 , 0.00996542, 0.01029038]),\n 'test_accuracy': array([0.96666667, 0.96666667, 1.        , 0.9       , 1.        ]),\n 'test_f1': array([0.96658312, 0.96658312, 1.        , 0.89974937, 1.        ]),\n 'test_roc_auc': array([0.98666667, 0.99833333, 1.        , 0.99166667, 1.        ])}"},"metadata":{}}],"execution_count":139},{"cell_type":"code","source":"print('Accuracy = ', cv_result['test_accuracy'].mean() )\nprint('F1 = ', cv_result['test_f1'].mean() )\nprint('Roc_auc = ', cv_result['test_roc_auc'].mean() )","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-18T17:21:29.099544Z","iopub.execute_input":"2025-01-18T17:21:29.099899Z","iopub.status.idle":"2025-01-18T17:21:29.117358Z","shell.execute_reply.started":"2025-01-18T17:21:29.09984Z","shell.execute_reply":"2025-01-18T17:21:29.116268Z"}},"outputs":[{"name":"stdout","text":"Accuracy =  0.9666666666666668\nF1 =  0.9665831244778612\nRoc_auc =  0.9953333333333333\n","output_type":"stream"}],"execution_count":140}]}